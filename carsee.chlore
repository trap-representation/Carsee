;    Carsee is an IRC client
;    Copyright (C) 2023  Somdipto Chakraborty
;
;    This program is free software: you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;
;    This program is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;
;    You should have received a copy of the GNU General Public License
;    along with this program.  If not, see <https://www.gnu.org/licenses/>.

import "stdlib.chloreh"
import "io.chloreh"
import "socket.chloreh"
import "alloc2.chloreh"
import "stddef.chloreh"
import "string.chloreh"
import "watch.chloreh"
import "exit.chloreh"

:nickname_alloc_err
  pushp "\ncarsee (error): failed to allocate enough memory\n"
  pushp putstre call
  pushp phclean call
  pushi 1 hltr

:read_nickname_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:password_alloc_err
  pushp "\ncarsee (error): failed to allocate enough memory\n"
  pushp putstre call
  pop
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:read_password_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:username_alloc_err
  pushp "\ncarsee (error): failed to allocate enough memory\n"
  pushp putstre call
  pop
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:read_username_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:creat_socket_err
  pushp "\ncarsee (error): failed to create socket\n"
  pushp putstre call
  pop
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:host_alloc_err
  pushp "\ncarsee (error): failed to allocate enough memory\n"
  pushp putstre call
  pop
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:read_host_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:port_alloc_err
  pushp "\ncarsee (error): failed to allocate enough memory\n"
  pushp putstre call
  pop
  pushp flush call
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:read_port_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  pushp flush call
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:connect_err
  pushp "\ncarsee (error): failed to connect\n"
  pushp putstre call
  pushp flush call
  pushp flush call
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:pass_write_err
  pushp "\ncarsee (error): failed to send message to server\n"
  pushp putstre call
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:nick_write_err
  pushp "\ncarsee (error): failed to send message to server\n"
  pushp putstre call
  get2 pushp closef call
  pushp flush call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:user_write_err
  pushp "\ncarsee (error): failed to send message to server\n"
  pushp putstre call
  get2 pushp closef call
  pushp flush call
  pushp phclean call
  pushi 1 hltr

:climsg_alloc_err
  pushp "\ncarsee (error): failed to allocate enough memory\n"
  pushp putstre call
  get2 pushp closef call
  pushp phclean call
  pushi 1 hltr

:creat_watch_err
  pushp "\ncarsee (error): failed to create watch\n"
  pushp putstre call
  pop
  pushp flush call
  get2 pushp closef call
  pushp phclean call
  pushi 1 hltr

:watch_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:climsg_read_err
  pushp "\ncarsee (error): failed to read from stdin\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:climsg_preview_err
  pushp "\ncarsee (error): failed to write preview to stdout\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:climsg_write_err
  pushp "\ncarsee (error): failed to send message to server\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:read_serv_err
  pushp "\ncarsee (error): failed to read message from server\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:servmsg_write_err
  pushp "\ncarsee (error): failed to write servent-sent message to stdout\n"
  pushp putstre call
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:pong_write_err
  pushp "\ncarsee (error): failed to send message to server\n"
  pushp putstre call
  pop
  pushp flush call
  get2 pushp closef call
  get3 pushp watch_close call
  pushp phclean call
  pushi 1 hltr

:quit
  pushp "\ncarsee (info): quitting\n" pushp putstre call
  pushp flush call
  pushp phclean call
  get2 pushp closef call
  get3 pushp watch_close call
  hlt

:main
  pushp "\
carsee (info): Carsee is an IRC client\n\
carsee (info): Copyright (C) 2023  Somdipto Chakraborty\n\
carsee (info): \n\
carsee (info): This program is free software: you can redistribute it and/or modify\n\
carsee (info): it under the terms of the GNU General Public License as published by\n\
carsee (info): the Free Software Foundation, either version 3 of the License, or\n\
carsee (info): (at your option) any later version.\n\
carsee (info): \n\
carsee (info): This program is distributed in the hope that it will be useful,\n\
carsee (info): but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
carsee (info): MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
carsee (info): GNU General Public License for more details.\n\
carsee (info): \n\
carsee (info): You should have received a copy of the GNU General Public License\n\
carsee (info): along with this program.  If not, see <https://www.gnu.org/licenses/>.\n"
  pushp putstre call

  :connect_serv

    pushp "\ncarsee (info): Nickname\n"
    pushp putstre call

    pushl 511 pushp aseg call                         ;chunk to store the username
    get0 pushi 1 pushp nickname_alloc_err jeq

    pushl 510
    over
    pushp getstr call
    get0 pushi EOF pushp read_nickname_err jeq
    get0 write3                                        ;length of nickname

    pushp "\ncarsee (info): Password\n"
    pushp putstre call

    pushl 511 pushp aseg call                         ;chunk to store the password
    get0 pushi 1 pushp password_alloc_err jeq

    pushl 510
    over
    pushp getstr call
    get0 pushi EOF pushp read_password_err jeq
    get0 write4                                        ;length of password

    pushp "\ncarsee (info): Username\n"
    pushp putstre call

    pushl 511 pushp aseg call                         ;chunk to store the username
    get0 pushi 1 pushp username_alloc_err jeq

    pushl 510
    over
    pushp getstr call
    get0 pushi EOF pushp read_username_err jeq
    get0 write5                                        ;length of username

    pushi AF_INET
    pushi SOCK_STREAM
    pushi 0
    pushp socket call                                ;the sd
    get0 pushi -1 pushp creat_socket_err jeq

    write2                                           ;save the sd in block 2

    pushp "\ncarsee (info): Host\n"
    pushp putstre call

    pushl 511 pushp aseg call                       ;chunk to store the host name
    get0 pushi 1 pushp host_alloc_err jeq

    pushl 510
    over
    pushp getstr call
    get0 pushi EOF pushp read_host_err jeq

    pushp "\ncarsee (info): Port\n"
    pushp putstre call

    pushl 511 pushp aseg call                       ;chunk to store the port
    get0 pushi 1 pushp port_alloc_err jeq

    pushl 510
    over
    pushp getstr call
    get0 pushi EOF pushp read_port_err jeq

    over
    over
    swap
    pushi AF_INET
    pushi SOCK_STREAM
    pushi 0
    pushi 0
    get2
    pushp connect call
    get0 pushi 1 pushp connect_err jeq

    pushp "\ncarsee (info): connection successful\n" pushp putstre call

    pushp flush call
    pushp flush call

    ;nickname password username
    swap

    get2
    pushp "PASS "
    pushui 5
    pushp writef call                                 ;write to socket
    get0 pushi -1 pushp pass_write_err jeq

    get2
    over
    get4
    pushp writef call
    get0 pushi -1 pushp pass_write_err jeq

    get2
    pushp "\r\n"
    pushui 2
    pushp writef call
    get0 pushi -1 pushp pass_write_err jeq

    pushp flush call

    swap

    get2
    pushp "NICK "
    pushui 5
    pushp writef call                                 ;write to socket
    get0 pushi -1 pushp nick_write_err jeq

    get2
    over
    get3
    pushp writef call
    get0 pushi -1 pushp nick_write_err jeq

    get2
    pushp "\r\n"
    pushui 2
    pushp writef call
    get0 pushi -1 pushp nick_write_err jeq

    pushp flush call

    get2
    pushp "USER "
    pushui 5
    pushp writef call                                 ;write to socket
    get0 pushi -1 pushp user_write_err jeq

    get2
    over
    get5
    pushp writef call
    get0 pushi -1 pushp user_write_err jeq

    get2
    pushp "\r\n"
    pushui 2
    pushp writef call
    get0 pushi -1 pushp user_write_err jeq

    pushp flush call

    pushl 512 pushp aseg call
    get0 pushi 1 pushp climsg_alloc_err jeq

    pushp watch_new call
    dup pushi -1 pushp creat_watch_err jeq
    write3                                                 ;save the wd in block 3

    pushi 2 write5                                         ;it is used during "PING" for executing behavior similar to
                                                         ;that of a state machine based on different values in block 5

    pushi 0 write6                                       ;if it's set to 1, the output is "held"

    :loop
      pushi 1 get6 pushp unhold jeq
      pushp unheld jmp

      :unhold
        pushp "\ncarsee (info): unheld\n" pushp putstre call
        pushi 0 write6

      :unheld
        get3
        pushi READFD
        pushp fd_zero call

        pushi STDIN
        get3
        pushi READFD
        pushp fd_set call

        get2
        get3
        pushi READFD
        pushp fd_set call

        get3
        pushi 0
        pushi -1
        pushi -1
        get2 pushi 1 addi
        pushp watch call
        get0 pushi -1 pushp watch_err jeq

        get2
        get3
        pushi READFD
        pushp fd_isset call
        pushp read_serv jnz

        pushi STDIN
        get3
        pushi READFD
        pushp fd_isset call
        pushp read_stdin jnz

        :read_stdin
          pushl 510
          over
          pushp getstr call
          get0 pushi EOF pushp climsg_read_err jeq
          get0 write4                                                     ;length of message

          pushi 0 get4 pushp loop jeq

          dup pushp "/quit" pushp strcmp call pushp quit jz
          dup pushp "/hold" pushp strcmp call pushp hold jz
          dup pushp "/connect" pushp strcmp call pushp idc_connect_serv jz
          dup pushp "/help" pushp strcmp call pushp help jz
          pushp continue_to_preview jmp

          :help
            pushp "\
\ncarsee(info): /quit: quit client\n\
\ncarsee(info): /hold: pause all operations until at least one character is read from stdin\n\
\ncarsee(info): /connect: close the opened socket and connect to a (possibly different) server\n\
\ncarsee(info): /help: display this help message\n"
            pushp putstre call
            pushp loop jmp

          :idc_connect_serv
            pushp flush call
            get2 pushp closef call
            get3 pushp watch_close call
            pushp connect_serv jmp

          :hold
            pushp "\ncarsee (info): held\n" pushp putstre call
            pushi 1 write6
            pushp read_stdin jmp

          :continue_to_preview
            pushp "\ncarsee (preview): " pushp putstre call
            get0 pushi EOF pushp climsg_preview_err jeq

            pushi STDOUT
            over
            get4 ;message length
            pushp writef call
            get0 pushi -1 pushp climsg_preview_err jeq

            pushp "\n" pushp putstre call
            get0 pushi EOF pushp climsg_preview_err jeq

            get2
            over
            get4 ;message length
            pushp writef call
            get0 pushi -1 pushp climsg_write_err jeq

            get2
            pushp "\r\n"
            pushi 2
            pushp writef call
            get0 pushi -1 pushp climsg_write_err jeq

            pushp loop jmp

        :read_serv
          get2
          over ;allocated chunk
          pushl 512
          pushp readf call
          get0 pushi -1 pushp read_serv_err jeq
          get0 write3

          get3 pushi 0 pushp quit jeq
  
          pushi STDOUT
          over
          get3
          pushp writef call
          get0 pushi -1 pushp servmsg_write_err jeq

          dup

          :check_ping
            get5 pushi 0 pushp check_ssr jeq
            get5 pushi 1 pushp check_ssn jeq
            get5 pushi 2 pushp check_P jeq
            get5 pushi 3 pushp check_I jeq
            get5 pushi 4 pushp check_N jeq
            get5 pushi 5 pushp check_G jeq
            get5 pushi 6 pushp check_esr jeq
            get5 pushi 7 pushp check_esn jeq

            :inc_b5
              pushi 1 get5 addi write5
              pushp continue_checking_ping jmp

            :continue_checking_ping
              pushi 1 addp
              pushi 1 get3 subl dup write3
              pushp check_ping jnz
              pop
              pushp loop jmp

            :check_ssr
              pushc '\r' over loadc pushp inc_b5 jeq
              pushp continue_checking_ping jmp

            :check_ssn
              pushc '\n' over loadc pushp inc_b5 jeq
              pushi 0 write5
              pushp continue_checking_ping jmp

            :check_P
              pushc 'P' over loadc pushp inc_b5 jeq
              pushi 0 write5
              pushp continue_checking_ping jmp

            :check_I
              pushc 'I' over loadc pushp inc_b5 jeq
              pushi 0 write5
              pushp check_P jmp

            :check_N
              pushc 'N' over loadc pushp inc_b5 jeq
              pushi 0 write5
              pushp check_P jmp

            :check_G
              pushc 'G' over loadc pushp write_pong jeq
              pushi 0 write5
              pushp check_P jmp

              :write_pong
                pushi 6 write5

                get2
                pushp "PONG"
                pushi 4
                pushp writef call
                get0 pushi -1 pushp pong_write_err jeq

                pushp continue_checking_ping jmp

            :check_esr
              get2
              over
              pushi 1
              pushp writef call
              get0 pushi -1 pushp pong_write_err jeq

              pushc '\r' over loadc pushp inc_b5 jeq

              pushp continue_checking_ping jmp

            :check_esn
              pushi 6 write5

              get2
              over
              pushi 1
              pushp writef call
              get0 pushi -1 pushp pong_write_err jeq

              pushc '\n' over loadc pushp end_pong_msg jeq

             pushp continue_checking_ping jmp

              :end_pong_msg
                pushi 2 write5
                pushp continue_checking_ping jmp
